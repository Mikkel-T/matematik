---
import Answer from "@components/Answer.svelte";
import BasicCalculator from "@components/Calculators/BasicCalculator.svelte";
import PercentCalculator from "@components/Calculators/PercentCalculator.svelte";
import ShapeCalculator from "@components/Calculators/ShapeCalculator.svelte";
import VectorCalculator from "@components/Calculators/VectorCalculator.svelte";

import BaseLayout from "layout:BaseLayout";
import ListLayout from "layout:ListLayout";

import DefaultPage from "@utils/pages/DefaultPage";

export async function getStaticPaths() {
  let pages = [];
  let files = import.meta.glob<boolean, string, { default: DefaultPage }>(
    "../calculators/**/*.ts"
  );

  for (const key in files) {
    let page = key.replace("../calculators/", "").replace(".ts", "");
    let content = await files[key]();

    if (page === "index") page = undefined;

    if (content) {
      pages.push({
        params: { page },
        props: {
          content: content.default,
          page,
        },
      });
    }
  }

  return pages;
}

const {
  content: { type },
  content,
  page,
} = Astro.props;
---

<BaseLayout {content}>
  {type === "basic_calculator" && <BasicCalculator {page} client:load />}
  {type === "percent_calculator" && <PercentCalculator {page} client:load />}
  {type === "shape_calculator" && <ShapeCalculator {page} client:load />}
  {type === "vector_calculator" && <VectorCalculator {page} client:load />}
  {type.endsWith("calculator") && <Answer client:visible />}

  {type === "list" && <ListLayout content={content} />}
</BaseLayout>
