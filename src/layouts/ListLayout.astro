---
import type { MarkdownLayoutProps } from "astro";

type Props = MarkdownLayoutProps<{
  SEOtitle?: string;
  title: string;
  description: string;
  keywords: string;
}>;

import BaseLayout from "layout:BaseLayout";
const { title, description, keywords, SEOtitle } =
  Astro.props.frontmatter || Astro.props;

let files = await Astro.glob("../pages/**/*.mdx");

let path = Astro.url.pathname.replace(/\/$/, "") + "/";

let pages = [];

for (const file of files) {
  if (
    file.url?.startsWith(path) &&
    file.url.replace(path, "").split("/").length == 1 &&
    !file.frontmatter.hide
  ) {
    pages.push({
      title: file.frontmatter.title,
      path: file.url,
    });
  }
}
---

<BaseLayout {title} {description} {keywords} {SEOtitle}>
  <div
    class="prose prose-zinc mx-auto w-3/4 max-w-none dark:prose-invert prose-img:mx-auto prose-img:w-full prose-img:rounded-md prose-img:border prose-img:border-zinc-700 prose-img:bg-zinc-50 prose-img:p-2 sm:w-2/3 md:w-1/2 md:prose-img:w-2/3 xl:w-1/3"
  >
    <slot />
  </div>
  <div
    class="m-auto grid grid-cols-1 gap-4 p-3 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-6"
  >
    {
      pages.map((i) => (
        <a
          class="flex h-20 transform items-center justify-center rounded-xl border-2 border-zinc-300 bg-zinc-100 px-2 text-center transition-transform duration-500 hover:scale-105 dark:border-zinc-500 dark:bg-zinc-700"
          href={i.path}
        >
          {i.title}
        </a>
      ))
    }
  </div>
</BaseLayout>
